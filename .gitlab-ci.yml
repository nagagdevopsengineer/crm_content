image: docker:19.03.12

variables:
  CONTAINER_TAG: ${CI_COMMIT_SHORT_SHA}
  REPO_DOCKERHUB: ${CI_REGISTRY_USER}/vapprtech/arrivnow-reactjs"
  DOCKER_TLS_CERTDIR: "/certs"

services:
  - docker:19.03.12-dind

stages:          # List of stages for jobs, and their order of execution
  - build_image
  - deploy_arrivnow

docker-build-image:
  stage: build_image
  script:
    - docker info
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD}
    - docker build -t ${REPO_DOCKERHUB}:${CONTAINER_TAG} .
    - docker tag ${REPO_DOCKERHUB}:${CONTAINER_TAG} ${REPO_DOCKERHUB}:${CONTAINER_TAG}
    - docker tag ${REPO_DOCKERHUB}:${CONTAINER_TAG} vapprtech/arrivnow-reactjs:latest
    - docker push ${REPO_DOCKERHUB}:${CONTAINER_TAG}t
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" || $CI_COMMIT_BRANCH == "master"'
      changes:
        - Dockerfile
      when: always

deploy-arrivnow:
  stage: deploy_arrivnow
  #needs: ["docker-build-image"]
  image: vapprtech/awskubectl:latest
  before_script:
    - aws eks update-kubeconfig --name arrivnow --region us-east-2 
    - kubectl create namespace crm-content  --dry-run=client -o yaml | kubectl apply -f -   
  script:
      - sed -i 's/<VERSION>/'${CI_COMMIT_SHORT_SHA}'/g' crmdeployment.yaml
        kubectl apply -f manifest
        kubectl get pods -n crm-content --field-selector=status.phase=Running -o wide 
        kubectl get svc -n crm-content -o wide
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" || $CI_COMMIT_BRANCH == "master"'
      when: always